%YAML 1.2
---
file_extensions:
  - fountain
hidden_file_extensions:
  - ftn
first_line_match: '^(?i)\b(title|format)\b:'
scope: text.fountain

variables:
  title_page: '^(?i)\b([\w ]+)\b:'
  scene_head: ^(?i)((\.(?!\.)|scene\.|int\.|ext\.|est\.|i/e\.|int\.?/ext\.?|flashback\.)[\p{L}\p{N}/\-â€”\(\)'\|., ]*)

contexts:
  main:
    - include: boneyard
    - include: title # enforces title page only being at top
    - match: ^$
      set: fountain

  fountain:
    - include: sections
    - include: scene
    - include: action
    - include: note
    - include: boneyard
    - include: angled-stuff
    - include: lyrics
    - include: pagebreak
    - include: synopses
    - include: markup
    - include: macros
    - include: characters
    - include: vars

  title:
    - match: '{{title_page}}'
      captures:
        1: variable.language.fountain
      push:
        - include: vars
        - include: note
        - include: boneyard
        - include: markup
        - match: ^(?!\s)
          pop: true
        - match: ^$
          pop: true

  scene:
    - match: '{{scene_head}}$'
      scope: entity.name.section.fountain
    - match: '{{scene_head}}( )(\#.*\#)$'
      captures:
        1: entity.name.section.fountain
        4: entity.name.enum.fountain

  macros:
    - match: "(?i)^(include):(.+?)$"
      captures:
        1: keyword.control.import.fountain
        2: include
    - match: "(?i)^(header|footer):(.+?)$"
      captures:
        1: keyword.control.fountain
    # - match: "(?i)^(&)(.+?$)"
      # captures:
        # 1: keyword.control.import.fountain
        # 2: include

  action:
    - match: ^!
      scope: constant.other.fountain

  note:
    - match: \[\[\s*(?=\S)
      scope: punctuation.definition.comment.begin
      push:
        - include: vars
        - include: at-tags
        - meta_scope: comment.fountain
        - match: $
          pop: true
        - match: \]\]
          scope: punctuation.definition.comment.end.fountain
          pop: true

  boneyard:
    - match: /\*
      scope: punctuation.definition.comment.begin.fountain
      push:
        - include: gender-headings
        - include: at-tags
        - meta_scope: comment.block.fountain
        - match: \*/
          scope: punctuation.definition.comment.end.fountain
          pop: true

  parentheticals:
    - match: ^\s*\(
      scope: punctuation.section.parens.begin.fountain
      push:
        - meta_scope: meta.parens.fountain
        - match: \)
          scope: punctuation.section.parens.end.fountain
          pop: true
        - match: ^$
          pop: true

  characters:
    - match: ^\s*(\@)(.+?)$
      captures:
        1: constant.other.fountain
        2: string.fountain
    - match: ^\s*[^a-z]+$
      scope: string.fountain

  angled-stuff:
    - match: (?i)^\s*.+to:$
      scope: keyword.control.fountain
    - match: ^\s*\>
      pop: true
      branch_point: angled-restart
      branch:
        - transition
        - centered

  centered:
    - include: vars
    - include: markup
    - match: $
      pop: true

  transition:
    - match: \<\s*$ # oops we're centered
      fail: angled-restart
    - match: \>
      scope: keyword.control.fountain
    - match: \w+
      scope: keyword.control.fountain
    - match: $
      pop: true

  lyrics:
    - match: ^\s*(~).+?$
      captures:
        1: constant.other.fountain

  sections:
    - match: ^\s*#+\s
      scope: punctuation.definition.heading.fountain
      push:
        - include: vars
        - meta_scope: punctuation.definition.heading.fountain
        - include: note
        - match: $
          pop: true

  synopses:
    - match: ^\s*=
      scope: punctuation.definition.comment.fountain
      push:
        - include: vars
        - meta_scope: comment.line.fountain
        - match: $
          pop: true

  pagebreak:
    - match: ===$
      scope: constant.other.fountain

  vars:
    - match: (?i)(#\b\S+\b)
      scope: constant.numeric.fountain
    - match: (?i)(\$\b(title|author|source|notes|draft_?date|copyright|revision|contact|info|date)\b)
      scope: constant.other.placeholder.fountain
    - match: (?i)(@\b[\w_]+\b)
      scope: constant.language.fountain

  at-tags:
    - match: (?i)(@\b\S+\b)
      scope: variable.annotation.fountain

  markup-bold:
    - match: (?<!\\)\*\*(?!\s)
      scope: punctuation.definition.bold.begin.fountain
      push:
        - include: markup-italic
        - include: markup-highlight
        - match: (?<!\s)\*\*
          scope: punctuation.definition.bold.end.fountain
          pop: true
        - match: $
          pop: true
        - match: .+?
          scope: markup.bold.fountain

  markup-italic:
    - match: (?<!\\)\*(?!\s)
      scope: punctuation.definition.italic.begin.fountain
      push:
        - include: markup-bold
        - include: markup-highlight
        - match: (?<!\s)\*
          scope: punctuation.definition.italic.end.fountain
          pop: true
        - match: $
          pop: true
        - match: .+?
          scope: markup.italic.fountain

  markup-underline:
    - match: (?<!\\)(_)(?!\s)
      scope: punctuation.definition.underline.begin.fountain
      push:
        - include: markup-highlight
        - match: (?<!\s)_
          scope: punctuation.definition.underline.end.fountain
          pop: true
        - match: $
          pop: true
        - match: .+?
          scope: markup.underline.fountain

  markup-highlight:
    - match: (?<!\\)(\+)(?!\s)
      scope: punctuation.definition.quote.begin.fountain
      push:
        - match: (?<!\s)(\+)
          scope: punctuation.definition.quote.begin.fountain
          pop: true
        - match: $
          pop: true
        - match: .+?
          scope: markup.quote.fountain

  markup:
    - include: markup-italic
    - include: markup-bold
    - include: markup-underline
    - include: markup-highlight

  gender-headings:
    - match: \[gender\.(.+?)\]
      captures:
        0: comment.fountain
        1: variable.parameter.fountain
